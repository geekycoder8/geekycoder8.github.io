{"version":3,"file":"component---src-pages-projects-jsx-13a346a714c0ff4d7915.js","mappings":"sPAwEA,MArEA,SAAcA,GAaV,OACIC,EAAAA,cAACC,EAAAA,EAAOC,IAAG,CACPC,QAAS,CACLC,OAAQ,GACRC,EAAG,IACHC,QAAS,IAGbC,QAAS,CACLH,OAAQ,EACRC,EAAE,EACFC,QAAS,GAGbE,WAAY,CACRC,MAAOV,EAAMU,OAGjBC,UAAU,SAEVV,EAAAA,cAAA,OAAKU,UAAU,uCACXV,EAAAA,cAAA,MAAIU,UAAU,0BAA2BX,EAAMY,OAC/CX,EAAAA,cAAA,OAAKU,UAAU,0BACXV,EAAAA,cAAA,KAAGU,UAAU,sCACRX,EAAMa,MAEXZ,EAAAA,cAACC,EAAAA,EAAOC,IAAG,CACPQ,UAAU,yBACVG,WAAY,CAAEC,MAAO,MAErBd,EAAAA,cAAA,OAAKe,IAAMhB,EAAMiB,IAAMC,IAAI,OAGnCjB,EAAAA,cAAA,SACIA,EAAAA,cAAA,QAAMU,UAAU,4BAA2B,sBAAyB,IA9CpF,SAA4BQ,GACxB,IAAIC,EAAS,GACb,IAAI,IAAIC,KAAQF,EACE,KAAXC,IAGCA,GAAU,MAFVA,GAAUC,EAMlB,OAAOD,CACX,CAmCuFE,CAAmBtB,EAAMuB,OAEpGtB,EAAAA,cAAA,OAAKU,UAAU,yBAMXV,EAAAA,cAAA,KAAGU,UAAU,OAAOa,KAAMxB,EAAMyB,UAC5BxB,EAAAA,cAAA,OAAKyB,MAAM,6BAA6Bf,UAAU,+BAA+BgB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACpH5B,EAAAA,cAAA,QAAM6B,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qFAUjG,E,UClBO,SAASC,IACZ,OACIjC,EAAAA,cAAA,aAAO,iBAIf,CAEA,MAtDA,SAAiBkC,GAAgB,IAAf,SAAEC,GAAUD,EAC1B,MAAME,GAAOC,EAAAA,EAAAA,IAAe,eAgBtB,EAACC,EAAK,EAACC,IAAWC,EAAAA,EAAAA,WAAS,GACjC,OACIxC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKU,UAAU,sCACXV,EAAAA,cAACyC,EAAAA,EAAM,CAACH,KAAMA,EAAMC,QAASA,EAASJ,SAAUA,IAChDnC,EAAAA,cAAA,OAAKU,UAAS,SAAU4B,EAAO,QAAU,KACrCtC,EAAAA,cAAA,OAAKU,WAAc4B,EAAO,QAAU,SAAO,oBACvCtC,EAAAA,cAAA,MAAIU,UAAU,sBAAqB,YAE/B0B,EAAKM,kBAAkBC,MAAMC,KAAI,CAACC,EAAGC,IAC1B9C,EAAAA,cAAC+C,EAAI,CACRC,IAAKH,EAAEI,GACPtC,MAAOkC,EAAEK,YAAYvC,MACrBC,KAAMiC,EAAEM,gBAER3B,SAAUqB,EAAEK,YAAY1B,SACxBF,KAAMuB,EAAEK,YAAY5B,KACpBN,IAAK6B,EAAEK,YAAYE,MACnB3C,MAAS,GAAFqC,SAS3C,C","sources":["webpack://gatsby-starter-hello-world/./src/components/Card.jsx","webpack://gatsby-starter-hello-world/./src/pages/projects.jsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\n\nfunction Card(props) {\n    function commaSeparatedJoin(list) {\n        let output = \"\";\n        for(let item of list) {\n            if(output === \"\") {\n                output += item;\n            } else {\n                output += \", \";\n                output += item;\n            }\n        }\n        return output;\n    }\n    return (\n        <motion.div\n            initial={{\n                rotate: 10,\n                y: 200,\n                opacity: 0.3\n            }}\n\n            animate={{\n                rotate: 0,\n                y:0,\n                opacity: 1\n            }}\n\n            transition={{\n                delay: props.delay\n            }}\n\n            className=\"my-10\"\n        >\n            <div className=\"w-auto bg-dark px-5 py-3 font-light\">\n                <h1 className=\"text-2xl font-semibold\">{ props.title }</h1>\n                <div className=\"grid gap-4 grid-cols-4\">\n                    <p className=\"mt-8 mb-5 col-span-4 lg:col-span-3\">\n                        {props.body}\n                    </p>\n                    <motion.div\n                        className=\"hidden lg:block h-full\"\n                        whileHover={{ scale: 1.3 }}\n                    >\n                        <img src={ props.img } alt=\"\"/>\n                    </motion.div>\n                </div>\n                <p>\n                    <span className=\"font-bold text-highlight\">Technologies Used:</span> { commaSeparatedJoin(props.tech) }\n                </p>\n                <div className=\"flex mt-5 justify-end\">\n                    {/* <a className=\"mr-3\" href={ props.github }>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 hover:text-highlight\" role=\"img\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n                        </svg>\n                    </a> */}\n                    <a className=\"mr-3\" href={props.external}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 hover:text-highlight\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                        </svg>\n                    </a>\n                </div>\n            </div>\n        </motion.div>\n\n           \n        \n    )\n}\n\nexport default Card;","import React, { useState } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport Card from '../components/Card';\nimport Navbar from '../components/Navbar';\n\nfunction Projects({ location }) {\n    const data = useStaticQuery(graphql`\n        query {\n            allMarkdownRemark {\n                nodes {\n                    id\n                    frontmatter {\n                    title\n                    external\n                    tech\n                    image\n                    }\n                    rawMarkdownBody\n                }\n            }\n        }\n    `);\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <div className=\"h-full w-full bg-primary font-mono\">\n                <Navbar open={open} setOpen={setOpen} location={location}/>\n                <div className={`flex ${open ? 'mt-48' : ''}`}>\n                    <div className={`${open ? 'my-32' : 'mt-20'} text-info mx-10`}>\n                        <h1 className=\"text-4xl font-bold\">Projects</h1>\n                        {\n                            data.allMarkdownRemark.nodes.map((e, i) => {\n                                return <Card \n                                    key={e.id}\n                                    title={e.frontmatter.title} \n                                    body={e.rawMarkdownBody}\n                                    // github={e.frontmatter.github}\n                                    external={e.frontmatter.external}\n                                    tech={e.frontmatter.tech}\n                                    img={e.frontmatter.image}\n                                    delay={i*0.3}\n                                />\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport function Head() {\n    return (\n        <title>\n            Mohamed Faisal\n        </title>\n    )\n}\n\nexport default Projects;"],"names":["props","React","motion","div","initial","rotate","y","opacity","animate","transition","delay","className","title","body","whileHover","scale","src","img","alt","list","output","item","commaSeparatedJoin","tech","href","external","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Head","_ref","location","data","useStaticQuery","open","setOpen","useState","Navbar","allMarkdownRemark","nodes","map","e","i","Card","key","id","frontmatter","rawMarkdownBody","image"],"sourceRoot":""}